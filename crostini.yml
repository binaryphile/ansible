- hosts: localhost
  environment:
    PATH: "{{ ansible_env.PATH }}:/nix/var/nix/profiles/default/bin"

  tasks:
    - name: directories
      file:
        path:   $HOME/{{ item }}
        state:  directory
        mode:   '755'
      loop:
        - .config/liquidprompt
        - .config/ranger
        - tmp
        - .local/share/nvim/site/autoload
      
    - name: ssh directory
      file:
        path:   $HOME/.ssh
        state:  directory
        mode:   '700'

    - name: clone dotfiles
      git:
        repo: https://github.com/binaryphile/dotfiles.git
        dest: $HOME/dotfiles
        
    - name: context link
      file:
        src:    contexts/work/crostini-bullseye
        path:   $HOME/dotfiles/context
        state:  link
        
    - name: dotfile links
      file:
        src:    $HOME/dotfiles/{{ item.src }}
        path:   $HOME/{{ item.path }}
        state:  link
        force:  yes
      loop:
        - { src: bash/init.bash,              path: .profile                          }
        - { src: bash/init.bash,              path: .bash_profile                     }
        - { src: bash/init.bash,              path: .bashrc                           }
        - { src: gitconfig,                   path: .gitconfig                        }
        - { src: liquidprompt/liquid.theme,   path: .config/liquidprompt/liquid.theme }
        - { src: liquidprompt/liquidpromptrc, path: .config/liquidpromptrc            }
        - { src: ssh/config,                  path: .ssh/config                       }
        - { src: tmux.conf,                   path: .tmux.conf                        }
        - { src: ranger/rc.conf,              path: .config/ranger/rc.conf            }

    - name: install programs
      become: true
      apt: name={{ item }}
      loop:
        - neovim
        - ranger
        - tmux
        - silversearcher-ag
        - htop
        - highlight
  
    - name: clone vim configuration
      git:
        repo: https://github.com/binaryphile/dot_vim.git
        dest: $HOME/.config/nvim

    - name: install vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: $HOME/.local/share/nvim/site/autoload/plug.vim
        mode: '644'

    - name: check if nix is already installed
      command: nix-env --version
      register: nix_installed
      ignore_errors: yes
    
    - name: download nix install script
      get_url:
        url: https://install.lix.systems/lix
        dest: /tmp/lix-install.sh
        mode: '0755'
      when: nix_installed.failed
    
    - name: run nix install script
      command: /tmp/lix-install.sh install --no-confirm
      when: nix_installed.failed
    
    - name: clean up nix install script
      file:
        path: /tmp/lix-install.sh
        state: absent

    - name: add home-manager channel
      command: >
        nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
      args:
        creates: $HOME/.nix-channels
        
    - name: update nix channels
      command: nix-channel --update
      args:
        creates: $HOME/.nix-defexpr/channels/home-manager

    - name: install home-manager
      command: "nix-shell '<home-manager>' -A install"
      args:
        creates: $HOME/.config/home-manager

    - name: nix links
      file:
        src:    $HOME/dotfiles/{{ item.src }}
        path:   $HOME/{{ item.path }}
        state:  link
        force:  yes
      loop:
        - { src: home.nix,   path: .config/home-manager/home.nix  }
        - { src: config.nix, path: .config/nixpkgs/config.nix     }

    - name: install with home-manager
      command: home-manager switch
