#!/usr/bin/env bash

main() {
  section system
  section dotfiles
  section nix
}

system() {
  task: 'set up ssh directory'   mkdir -pm 700 $HOME/.ssh
  task: 'turn off motd'          'echo 5 >$HOME/.local/share/cros-motd'

  task: 'create required directories' 'mkdir -pm 755 $HOME/$1' <<'  END'
    .config/liquidprompt
    .config/nixpkgs
    .config/ranger
    .local/share/nvim/site/autoload
  END

  task:   'apt update and upgrade'
  become: root
  def:    <<'  END'
    apt update -qq
    apt upgrade -y
  END
}

dotfiles() {
  task: 'link context file' ln -sfT contexts/work/crostini-bullseye $HOME/dotfiles/context

  task: 'clone dotfiles repository'
  ok:   '[[ -e $HOME/dotfiles ]]'
  def:  git clone https://github.com/binaryphile/dotfiles.git $HOME/dotfiles

  task: 'create dotfile symlinks' 'local -A l="($1)"; ln -sf $HOME/dotfiles/${l[src]} $HOME/${l[path]}' <<'  END'
    [src]=bash/init.bash               [path]=.profile
    [src]=bash/init.bash               [path]=.bash_profile
    [src]=bash/init.bash               [path]=.bashrc
    [src]=gitconfig                    [path]=.gitconfig
    [src]=liquidprompt/liquid.theme    [path]=.config/liquidprompt/liquid.theme
    [src]=liquidprompt/liquidpromptrc  [path]=.config/liquidpromptrc
    [src]=ssh/config                   [path]=.ssh/config
    [src]=tmux.conf                    [path]=.tmux.conf
    [src]=ranger/rc.conf               [path]=.config/ranger/rc.conf
  END
}

nix() {
  task: 'install nix'
  ok:   '[[ -e /nix/var/nix/profiles/default/bin/nix-env ]]'
  def:  'curl -sSf -L https://install.lix.systems/lix | sh -s -- install --no-confirm'

  PATH+=:/nix/var/nix/profiles/default/bin

  task: 'add home manager channel'
  ok:   '[[ -e $HOME/.nix-channels ]]'
  def:  nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager

  task: 'update nix channels'
  ok:   '[[ -e $HOME/.nix-defexpr/channels/home-manager ]]'
  def:  nix-channel --update

  task: 'install home manager'
  ok:   '[[ -e $HOME/.config/home-manager ]]'
  def:  nix-shell '<home-manager>' -A install

  set +u
  source $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
  set -u

  task: 'create nix configuration symlinks' 'local -A l="($1)"; ln -sf $HOME/dotfiles/${l[src]} $HOME/.config/${l[path]}' <<'  END'
    [src]=home.nix    [path]=home-manager/home.nix
    [src]=config.nix  [path]=nixpkgs/config.nix
  END

  task: 'apply home manager configuration'
  out: true
  def: home-manager switch
}

if [[ -e task.bash ]]; then
  source ./task.bash
else
  task=$(curl -fsSL https://raw.githubusercontent.com/binaryphile/ansible/main/task.bash) || exit
  eval "$task"
  unset -v task
fi

return 2>/dev/null
set -eu

[[ ${1:-} == --trace ]] && { shift; set -x; }

main
summarize
