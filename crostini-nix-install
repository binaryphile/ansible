#!/usr/bin/env bash

taskBash=$(curl -s https://raw.githubusercontent.com/binaryphile/ansible/main/task.bash) || exit
eval "$taskBash"
unset -v taskBash

main() {
  run system "
    aptUpdateAndUpgrade
    turnOffMOTD
    createRequiredDirectories
    setUpSSHDirectory
  "

  run dotfiles "
    cloneDotfilesRepository
    linkContextFile
    createDotfileSymlinks
  "

  run nix "
    installNix
    addHomeManagerChannel
    updateNixChannels
    installHomeManager
    createNixConfigurationSymlinks
    applyHomeManagerConfiguration
  "
}

group system
{
  task aptUpdateAndUpgrade
  aptUpdateAndUpgrade() {
    sudo apt update -qq && sudo apt upgrade -y
  }

  task turnOffMOTD
  ok '[[ $(<$HOME/.local/share/cros-motd) == 5 ]]'
  turnOffMOTD() {
    echo 5>$HOME/.local/share/cros-motd
  }

  task createRequiredDirectories
  createRequiredDirectories() {
    local dirs=(
      .config/liquidprompt
      .config/nixpkgs
      .config/ranger
      .local/share/nvim/site/autoload
    )
    for dir in ${dirs[*]}; do
      mkdir -pm 755 $dir
    done
  }

  task setUpSSHDirectory mkdir -m 700 $HOME/.ssh
  ok '[[ -d $HOME/.ssh ]]'
}


group dotfiles
{
  task cloneDotfilesRepository git clone https://github.com/binaryphile/dotfiles.git $HOME/dotfiles
  ok '[[ -e $HOME/dotfiles ]]'

  task linkContextFile ln -s contexts/work/crostini-bullseye $HOME/dotfiles/context
  ok '[[ -e $HOME/dotfiles/context ]]'

  task createDotfileSymlinks
  createDotfileSymlinks() {
    local links=(
      '[src]=bash/init.bash               [path]=.profile'
      '[src]=bash/init.bash               [path]=.bash_profile'
      '[src]=bash/init.bash               [path]=.bashrc'
      '[src]=gitconfig                    [path]=.gitconfig'
      '[src]=liquidprompt/liquid.theme    [path]=.config/liquidprompt/liquid.theme'
      '[src]=liquidprompt/liquidpromptrc  [path]=.config/liquidpromptrc'
      '[src]=ssh/config                   [path]=.ssh/config'
      '[src]=tmux.conf                    [path]=.tmux.conf'
      '[src]=ranger/rc.conf               [path]=.config/ranger/rc.conf'
    )

    local link
    for link in ${links[*]}; do
      local -A link="($link)" # expand value to associative array
      ln -sf $HOME/dotfiles/${link[src]} $HOME/${link[path]}
    done
  }
}


group nix
{
  task installNix
  ok '[[ -e /nix/var/nix/profiles/default/bin/nix-env ]]'
  installNix() {
    curl -sSf -L https://install.lix.systems/lix | sh -s -- install --no-confirm
    PATH+=:/nix/var/nix/profiles/default/bin
  }

  task addHomeManagerChannel nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
  ok '[[ -e $HOME/.nix-channels ]]'

  task updateNixChannels nix-channel --update
  ok '[[ -e $HOME/.nix-defexpr/channels/home-manager ]]'

  task installHomeManager nix-shell '<home-manager>' -A install
  ok '[[ -e $HOME/.config/home-manager ]]'

  task createNixConfigurationSymlinks
  createNixConfigurationSymlinks() {
    local links=(
      '[src]=home.nix    [path]=home-manager/home.nix'
      '[src]=config.nix  [path]=nixpkgs/config.nix'
    )

    local link
    for link in "${links[@]}"; do
      local -A link="($link)" # expand value to associative array
      ln -sf $HOME/dotfiles/${link[src]} $HOME/.config/${link[path]}
    done
  }

  task applyHomeManagerConfiguration bash -lc 'home-manager switch'
}

return 2>/dev/null
set -eu

main
summarize
